/**
 * This file is auto-generated by scripts/generate-api-client.js.
 * Do not edit this file directly.
 */

class ApiError extends Error {
    constructor(message, info, status) {
        super(message);
        this.name = 'ApiError';
        this.info = info;
        this.status = status;
    }
}

function createFetcher(method) {
    return async (params, options = {}) => {
        let url = options.url;
        if (params) {
            for (const key in params) {
                url = url.replace('[:' + key + ']', encodeURIComponent(params[key]));
            }
        }

        const fetchOptions = {
            method,
            headers: { 'Content-Type': 'application/json', ...options.headers },
            ...options.fetchOptions,
        };

        if (options.body) {
            fetchOptions.body = JSON.stringify(options.body);
        }

        const res = await fetch(url, fetchOptions);

        if (!res.ok) {
            let errorInfo;
            try {
                errorInfo = await res.json();
            } catch (e) {
                // Ignore if the response is not JSON
            }
            throw new ApiError('API request failed', errorInfo, res.status);
        }

        if (res.status === 204) {
            return;
        }

        return res.json();
    };
}

export const api = {
    hello: {
        get: createFetcher('GET')({ url: '/api/hello' }),
        post: createFetcher('POST')({ url: '/api/hello' }),
        put: createFetcher('PUT')({ url: '/api/hello' }),
        delete: createFetcher('DELETE')({ url: '/api/hello' }),
    },
};